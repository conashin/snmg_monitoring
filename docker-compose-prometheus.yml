volumes:
    data: {}
    grafana_data: {}

networks:
  innet:
    external:
      name: back-tier
  outnet:
    external:
      name: front-tier

services:
  main: #prometheus main service
    image: prom/prometheus:latest
    volumes:
      - ./prometheus/:/etc/prometheus/
      - data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    #ports:
      #- 9090:9090
    links:
      - cadvisor:cadvisor
      - alertmanager:alertmanager
#      - pushgateway:pushgateway
    depends_on:
      - cadvisor
#      - pushgateway
    networks:
      - innet
    restart: always

  node-exporter: #node-exporter: local system analysis
    image: quay.io/prometheus/node-exporter:latest
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /:/host:ro,rslave
    command: 
      - '--path.rootfs=/host'
      - '--path.procfs=/host/proc' 
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - 9100:9100
    networks:
      - innet
    restart: always
    deploy:
      mode: global

  alertmanager: # part of prometheus
    image: prom/alertmanager
    ports:
      - 9093:9093
    volumes:
      - ./alertmgr/:/etc/alertmanager/
    networks:
      - innet
    restart: always
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
#    deploy:
#      placement:
#        constraints:
#          - node.hostname == ${HOSTNAME}

  cadvisor: #local system analysis
    image: gcr.io/cadvisor/cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 8080:8080
    networks:
      - innet
    restart: always
    deploy:
      mode: global

  grafana: #grafana service
    image: grafana/grafana
    user: "472"
    depends_on:
      - main
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - stack.env
    networks:
      - innet
      - outnet
    restart: always

  pushgateway:
    image: prom/pushgateway
    restart: always
    expose:
      - 9091
    ports:
      - "9091:9091"
    networks:
      - innet
      - outnet
